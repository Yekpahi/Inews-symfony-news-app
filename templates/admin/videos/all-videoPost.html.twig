{% extends 'base.html.twig' %} {% block title %}Ajouter un video! {% endblock %}
{% block body %} {% block stylesheets %}
<link
  rel="stylesheet"
  type="text/css"
  href=" {{ asset('assets/css/video/video.css') }}"
/>
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
/>
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
  rel="stylesheet"
  integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
  crossorigin="anonymous"
/>
{% endblock %}

<!-- Debut  header bar -->

<!-- Fin  header bar -->
{% block header %} {% include "header/header.html.twig" %} {% endblock %}
<main class="main-content">
  <div class="container">
    <aside class="videos">
      {% for vde in video %}
      <div class="video">
        <div class="img-play-time">
          <img
            class="image-video"
            src="{{ asset('uploads/videos/pics/' ~ vde.videoPics)|imagine_filter('videopics') }}"
            width="224"
            height="224"
            alt="{{ vde.title }}"
          />
          <a
            class="playicon"
            href="{{ path('admin_videoPost_details', { slug: vde.slug }) }}"
          >
            <i
              class="fa fa-play-circle-o"
              style="font-size: 66px; color: white"
            ></i>
          </a>
          <span class="video-duration">00:00</span>
        </div>

        <div class="video-title">
          <i class="fa fa-newspaper-o" style="font-size: 20px"></i>
          <a href="{{ path('admin_videoPost_details', { slug: vde.slug }) }}">{{ vde.title
						|striptags|u.truncate(150, '...') |raw }}</a>
        </div>
        <div class="view-time">
          <i class="fa fa-eye" style="font-size: 20px"> </i> <span>2K</span> -
          11 hours ago
        </div>
        <div class="video-avatar">
          <a href="">
            <img
              class="user-avatar"
              alt="photo de {{ app.user.firstName }} {{ app.user.lastName }}"
              src="{{asset ('uploads/images/avatar/' ~ app.user.avatar)|imagine_filter('avatar') }}"
            />
            |
            {{ app.user.firstName }}
            {{ app.user.lastName }}
          </a>
        </div>
      </div>
      {% endfor %}
    </aside>
    <section class="video-a-la-une">
      <div id="video__container">
        <!-- Video -->
        <video
          preload="auto"
          width="450"
          data-cld-transformation='{ "width": 400, "crop": "limit" }'
          id="video"
          poster="http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"
        >
          <source
            src="http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"
            type="video/mp4"
          />
        </video>
        <div id="video__controls__container">
          <div
            id="video__play__centerButton"
            class="fa fa-play-circle-o fa-5x"
          ></div>
          <div id="video__controls">
            <button
              type="button"
              id="play-pause"
              class="controls play fa fa-play"
            ></button>
            <input type="range" id="seek-bar" value="0" class="controls" />
            <button
              type="button"
              id="mute"
              class="controls fa fa-volume-off"
            ></button>
            <input
              type="range"
              id="volume-bar"
              class="controls"
              min="0"
              max="1"
              step="0.1"
            />
            <button
              type="button"
              id="full-screen"
              class="controls fa fa-arrows-alt"
            ></button>
          </div>
        </div>
      </div>
      <div class="title-desc">
        <a>title des ange</a>
        <p>description des choses</p>
        <span> date de publication et vue</span>
        <a href=""><img src="" alt="" /> avatar </a>
      </div>
    </section>
  </div>
</main>
{% endblock %} {% block javascripts %}
<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
  crossorigin="anonymous"
></script>
<script
  src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
  integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
  crossorigin="anonymous"
></script>
<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
  integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
  crossorigin="anonymous"
></script>
<!--- Video player -->

<script>
  // Video
  var VideoPlayer = {
    init: function () {
      video.volume = 0.0;
      // Buttons
      var playButton = document.getElementById("play-pause");
      var muteButton = document.getElementById("mute");
      var fullScreenButton = document.getElementById("full-screen");
      video = document.getElementById("video");
      // Sliders
      var seekBar = document.getElementById("seek-bar");
      var volumeBar = document.getElementById("volume-bar");
      volumeBar.value = video.volume;
      // Controls
      videoControls = document.getElementById("video__controls");
      playCenterButton = document.getElementById("video__play__centerButton");
      caption = document.getElementById("video__caption");
      // Event listener for the play/pause button
      VideoPlayer.hideControls();
      //display control on mousemove
      document
        .getElementById("video__container")
        .addEventListener("mousemove", function () {
          VideoPlayer.showControls();
        });
      videoControls.addEventListener("mouseover", function () {
        VideoPlayer.showControls();
        clearTimeout(hideControl);
      });
      playButton.addEventListener("click", function () {
        playVideo();
      });
      playCenterButton.addEventListener("click", function () {
        playVideo();
      });
      function playVideo() {
        if (video.paused == true) {
          // Play the video
          video.play();
          // Update the button text to 'Pause'
          playButton.classList.toggle("fa-play");
          playButton.classList.toggle("fa-pause");
          playCenterButton.classList.toggle("fa-play-circle-o");
          playCenterButton.classList.toggle("fa-pause");
          playCenterButton.style.opacity = 0;
        } else {
          // Pause the video
          video.pause();
          // Update the button text to 'Play'
          playButton.classList.toggle("fa-play");
          playButton.classList.toggle("fa-pause");
          playCenterButton.classList.toggle("fa-play-circle-o");
          playCenterButton.classList.toggle("fa-pause");
          playCenterButton.style.opacity = 0.8;
        }
      }

      // Event listener for the mute button
      muteButton.addEventListener("click", function () {
        if (video.muted == false) {
          // Mute the video
          video.muted = true;
          // Update the volume Bar
          volumeBar.value = 0;
        } else {
          // Unmute the video
          video.muted = false;
          // Update the volume Bar
          volumeBar.value = video.volume;
        }
      });

      // Checks if the document is currently in fullscreen mode
      var isFullScreen = function () {
        return !!(
          document.fullScreen ||
          document.webkitIsFullScreen ||
          document.mozFullScreen ||
          document.msFullscreenElement ||
          document.fullscreenElement
        );
      };

      // Fullscreen
      fullScreenButton.addEventListener("click", function () {
        // If fullscreen mode is active...
        if (isFullScreen()) {
          // ...exit fullscreen mode
          // (Note: this can only be called on document)
          if (document.exitFullscreen) document.exitFullscreen();
          else if (document.mozCancelFullScreen) document.mozCancelFullScreen();
          else if (document.webkitCancelFullScreen)
            document.webkitCancelFullScreen();
          else if (document.msExitFullscreen) document.msExitFullscreen();
        } else {
          if (video.requestFullscreen) video.requestFullscreen();
          else if (video.mozRequestFullScreen) video.mozRequestFullScreen();
          else if (video.webkitRequestFullScreen) {
            video.webkitRequestFullScreen();
          } else if (video.msRequestFullscreen) video.msRequestFullscreen();
          VideoPlayer.hideControls();
        }
      });

      // Event listener for the seek bar
      var seekBarActive = false;
      seekBar.addEventListener("mousedown", function () {
        seekBarActive = true;
        clearTimeout(hideControl);
      });
      seekBar.addEventListener("mouseup", function () {
        seekBarActive = false;
        VideoPlayer.hideControls();
      });
      seekBar.addEventListener("mousemove", function () {
        if (seekBarActive == true) {
          // Calculate the new time
          var time = video.duration * (seekBar.value / 100);
          // Update the video time
          video.currentTime = time;
          clearTimeout(hideControl);
        }
      });

      // Update the seek bar as the video plays
      video.addEventListener("timeupdate", function () {
        // Calculate the slider value
        var value = (100 / video.duration) * video.currentTime;
        // Update the slider value
        seekBar.value = value;
      });

      // Event listener for the volume bar
      var volumeBarActive = false;
      volumeBar.addEventListener("mousedown", function () {
        volumeBarActive = true;
        clearTimeout(hideControl);
      });
      volumeBar.addEventListener("mouseup", function () {
        volumeBarActive = false;
      });
      volumeBar.addEventListener("mousemove", function () {
        if (volumeBarActive == true) {
          video.volume = volumeBar.value;
          clearTimeout(hideControl);
        }
      });
    },
    hideControls: function () {
      hideControl = setTimeout(function () {
        videoControls.style.opacity = 0.0;
        playCenterButton.style.opacity = 0.0;
        caption.style.opacity = 0.0;
        [].forEach.call(
          document.getElementsByClassName("controls"),
          function (el) {
            el.style.visibility = "hidden";
          }
        );
      }, 2000);
    },
    showControls: function () {
      //Hide Display Control Bar
      videoControls.style.opacity = 0.8;
      playCenterButton.style.opacity = 0.8;
      caption.style.opacity = 0.8;
      [].forEach.call(
        document.getElementsByClassName("controls"),
        function (el) {
          el.style.visibility = "visible";
        }
      );
      clearTimeout(hideControl);
      VideoPlayer.hideControls();
    },
  };

  document.addEventListener("DOMContentLoaded", function () {
    VideoPlayer.init();
  });
</script>

{% endblock %}
