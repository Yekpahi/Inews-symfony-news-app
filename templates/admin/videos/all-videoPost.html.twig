{% extends 'base.html.twig' %}
{% block title %}Ajouter un video!
{% endblock %}
{% block body %}
	{% block stylesheets %}
		<link rel="stylesheet" type="text/css" href=" {{ asset('assets/css/video/video.css') }}"/>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"/>
		<link href="https://fonts.googleapis.com/css?family=Comfortaa" rel="stylesheet">
	{% endblock %}

	<!-- Debut  header bar -->

	<!-- Fin  header bar -->
	{% block header %}
		{% include "header/header.html.twig" %}
	{% endblock %}
	<main class="main-content">
		<div class="container">
			<aside class="les-videos">
				{% for vde in video %}
					<div class="une-video">
						<div class="img-play-time">
							<img class="image-une-video" src="{{ asset('uploads/videos/pics/' ~ vde.videoPics)|imagine_filter('videopics') }}" width="224" height="224" alt="{{ vde.title }}"/>
							<a class="playicon" href="{{ path('video_details', { slug: vde.slug }) }}">
								<i class="fa fa-play-circle-o" style="font-size: 66px; color: white"></i>
							</a>
							<span class="une-video-duration">00:00</span>
						</div>

						<div class="une-video-title">
							<i class="fa fa-newspaper-o" style="font-size: 20px"></i>
							<a href="{{ path('video_details', { slug: vde.slug }) }}">{{ vde.title
						|striptags|u.truncate(150, '...') |raw }}</a>
						</div>
						<div class="view-time">
							<i class="fa fa-eye" style="font-size: 20px"></i>
							<span>2K</span>
							-
							          11 hours ago
						</div>
						<div class="une-video-avatar">
							<a href="">
								<img class="user-avatar" alt="photo de {{ app.user.firstName }} {{ app.user.lastName }}" src="{{asset ('uploads/images/avatar/' ~ app.user.avatar)|imagine_filter('avatar') }}"/>
								|
								{{ app.user.firstName }}
								{{ app.user.lastName }}
							</a>
						</div>
					</div>
				{% endfor %}
			</aside>
			<section
				class="video-a-la-une">
				<!-- Video content-->
				<div class='player-container'>
					<div class='player'>
						<video width="450" id='video' src='https://player.vimeo.com/external/271851475.sd.mp4?s=1a5c9b2541b420c133ded968b7c042fda26a8c0e&profile_id=165' autoplay playsinline></video>
						<div class='play-btn-big'></div>
						<div class='controls'>
							<div class="time">
								<span class="time-current"></span>
								<span class="time-total"></span>
							</div>
							<div class='progress'>
								<div class='progress-filled'></div>
							</div>
							<div class='controls-main'>
								<div class='controls-left'>
									<div class='volume'>
										<div class='volume-btn loud'>
											<svg width="26" height="24" viewbox="0 0 26 24" fill="none" xmlns="http://www.w3.org/2000/svg">
												<path d="M6.75497 17.6928H2C0.89543 17.6928 0 16.7973 0 15.6928V8.30611C0 7.20152 0.895431 6.30611 2 6.30611H6.75504L13.9555 0.237289C14.6058 -0.310807 15.6 0.151473 15.6 1.00191V22.997C15.6 23.8475 14.6058 24.3098 13.9555 23.7617L6.75497 17.6928Z" transform="translate(0 0.000518799)" fill="white"/>
												<path id="volume-low" d="M0 9.87787C2.87188 9.87787 5.2 7.66663 5.2 4.93893C5.2 2.21124 2.87188 0 0 0V2C1.86563 2 3.2 3.41162 3.2 4.93893C3.2 6.46625 1.86563 7.87787 0 7.87787V9.87787Z" transform="translate(17.3333 7.44955)" fill="white"/>

												<path id="volume-high" d="M0 16.4631C4.78647 16.4631 8.66667 12.7777 8.66667 8.23157C8.66667 3.68539 4.78647 0 0 0V2C3.78022 2 6.66667 4.88577 6.66667 8.23157C6.66667 11.5773 3.78022 14.4631 0 14.4631V16.4631Z" transform="translate(17.3333 4.15689)" fill="white"/>
												<path id="volume-off" d="M1.22565 0L0 1.16412L3.06413 4.0744L0 6.98471L1.22565 8.14883L4.28978 5.23853L7.35391 8.14883L8.57956 6.98471L5.51544 4.0744L8.57956 1.16412L7.35391 0L4.28978 2.91031L1.22565 0Z" transform="translate(17.3769 8.31403)" fill="white"/>
											</svg>

										</div>
										<div class='volume-slider'>
											<div class='volume-filled'></div>
										</div>
									</div>
								</div>
								<div class='play-btn paused'></div>
								<div class="controls-right">
									<div class='speed'>
										<ul class='speed-list'>
											<li class='speed-item' data-speed='0.5'>0.5x</li>
											<li class='speed-item' data-speed='0.75'>0.75x</li>
											<li class='speed-item' data-speed='1' class='active'>1x</li>
											<li class='speed-item' data-speed='1.5'>1.5x</li>
											<li class='speed-item' data-speed='2'>2x</li>
										</ul>
									</div>
									<div class='fullscreen'>
										<svg width="30" height="22" viewbox="0 0 30 22" fill="none" xmlns="http://www.w3.org/2000/svg">
											<path d="M0 0V-1.5H-1.5V0H0ZM0 18H-1.5V19.5H0V18ZM26 18V19.5H27.5V18H26ZM26 0H27.5V-1.5H26V0ZM1.5 6.54545V0H-1.5V6.54545H1.5ZM0 1.5H10.1111V-1.5H0V1.5ZM-1.5 11.4545V18H1.5V11.4545H-1.5ZM0 19.5H10.1111V16.5H0V19.5ZM24.5 11.4545V18H27.5V11.4545H24.5ZM26 16.5H15.8889V19.5H26V16.5ZM27.5 6.54545V0H24.5V6.54545H27.5ZM26 -1.5H15.8889V1.5H26V-1.5Z" transform="translate(2 2)" fill="white"/>
										</svg>

									</svg>


								</div>
							</div>
						</div>
					</div>
				</div>
				<!-- Desc title -->
				<div class="title-desc">
					<a href="#">title des ange en con egdgd Nous leur demandons pardons de pasitonner</a>
					<p class="descript">description des choses Lorem ipsum dolor sit 
						          temporibus, nostrum fuga illo, 
						          nesciunt ad facilis similique, laborum unde quisquam.
						        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Voluptas

					</p>
					<p class="vuetime">
						<i class="fa fa-eye" style="font-size: 20px"></i>
						<span>2K</span>
						-
						          11 hours ago</p>
					<div class="title-desc-avatar-container">
						<a href="">
							<img class="title-desc-avatar" alt="photo de {{ app.user.firstName }} {{ app.user.lastName }}" src="{{asset ('uploads/images/avatar/' ~ app.user.avatar)|imagine_filter('avatar') }}"/>
							|
							{{ app.user.firstName }}
							{{ app.user.lastName }}
						</a>
					</div>
				</div>
			</section>
		</div>
	</main>
{% endblock %}
{% block javascripts %}
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
	<!--- Video player -->

	<script>
		// ELEMENT SELECTORS
var player = document.querySelector(".player");
var video = document.querySelector("#video");
var playBtn = document.querySelector(".play-btn");
var volumeBtn = document.querySelector(".volume-btn");
var volumeSlider = document.querySelector(".volume-slider");
var volumeFill = document.querySelector(".volume-filled");
var progressSlider = document.querySelector(".progress");
var progressFill = document.querySelector(".progress-filled");
var textCurrent = document.querySelector(".time-current");
var textTotal = document.querySelector(".time-total");
var speedBtns = document.querySelectorAll(".speed-item");
var fullscreenBtn = document.querySelector(".fullscreen");

// GLOBAL VARS
let lastVolume = 1;
let isMouseDown = false;

// PLAYER FUNCTIONS
function togglePlay() {
if (video.paused) {
video.play();
} else {
video.pause();
} playBtn.classList.toggle("paused");
}
function togglePlayBtn() {
playBtn.classList.toggle("playing");
}

function toggleMute() {
if (video.volume) {
lastVolume = video.volume;
video.volume = 0;
volumeBtn.classList.add("muted");
volumeFill.style.width = 0;
} else {
video.volume = lastVolume;
volumeBtn.classList.remove("muted");
volumeFill.style.width = `${
lastVolume * 100
}%`;
}
}
function changeVolume(e) {
volumeBtn.classList.remove("muted");
let volume = e.offsetX / volumeSlider.offsetWidth;
volume < 0.1 ? (volume = 0) : (volume = volume);
volumeFill.style.width = `${
volume * 100
}%`;
video.volume = volume;
if (volume > 0.7) {
volumeBtn.classList.add("loud");
} else if (volume < 0.7 && volume > 0) {
volumeBtn.classList.remove("loud");
} else if (volume == 0) {
volumeBtn.classList.add("muted");
}
lastVolume = volume;
}
function neatTime(time) { // var hours = Math.floor((time % 86400)/3600)
var minutes = Math.floor((time % 3600) / 60);
var seconds = Math.floor(time % 60);
seconds = seconds > 9 ? seconds : `0${seconds}`;
return `${minutes}:${seconds}`;
}
function updateProgress(e) {
progressFill.style.width = `${
(video.currentTime / video.duration) * 100
}%`;
textCurrent.innerHTML = `${
neatTime(video.currentTime)
} / ${
neatTime(video.duration)
}`;
// textTotal.innerHTML = neatTime(video.duration);
// console.log(progressFill.style.width);
}
function setProgress(e) {
const newTime = e.offsetX / progressSlider.offsetWidth;
progressFill.style.width = `${
newTime * 100
}%`;
video.currentTime = newTime * video.duration;
}
function launchIntoFullscreen(element) {
if (element.requestFullscreen) {
element.requestFullscreen();
} else if (element.mozRequestFullScreen) {
element.mozRequestFullScreen();
} else if (element.webkitRequestFullscreen) {
element.webkitRequestFullscreen();
} else if (element.msRequestFullscreen) {
element.msRequestFullscreen();
}
}
function exitFullscreen() {
if (document.exitFullscreen) {
document.exitFullscreen();
} else if (document.mozCancelFullScreen) {
document.mozCancelFullScreen();
} else if (document.webkitExitFullscreen) {
document.webkitExitFullscreen();
}
}
var fullscreen = false;
function toggleFullscreen() {
fullscreen ? exitFullscreen() : launchIntoFullscreen(player);
fullscreen = ! fullscreen;
}
function setSpeed(e) {
console.log(parseFloat(this.dataset.speed));
video.playbackRate = this.dataset.speed;
speedBtns.forEach((speedBtn) => speedBtn.classList.remove("active"));
this.classList.add("active");
}
function handleKeypress(e) {
switch (e.key) {
case " ": togglePlay();
case "ArrowRight": video.currentTime += 5;
case "ArrowLeft": video.currentTime -= 5;
default:
return;
}
}
// EVENT LISTENERS
playBtn.addEventListener("click", togglePlay);
video.addEventListener("click", togglePlay);
video.addEventListener("play", togglePlayBtn);
video.addEventListener("pause", togglePlayBtn);
video.addEventListener("ended", togglePlayBtn);
video.addEventListener("timeupdate", updateProgress);
video.addEventListener("canplay", updateProgress);
volumeBtn.addEventListener("click", toggleMute);
window.addEventListener("mousedown", () => (isMouseDown = true));
window.addEventListener("mouseup", () => (isMouseDown = false));
// volumeSlider.addEventListener('mouseover', changeVolume);
volumeSlider.addEventListener("click", changeVolume);
progressSlider.addEventListener("click", setProgress);
fullscreenBtn.addEventListener("click", toggleFullscreen);
speedBtns.forEach((speedBtn) => {
speedBtn.addEventListener("click", setSpeed);
});
window.addEventListener("keydown", handleKeypress);
	</script>

{% endblock %}
